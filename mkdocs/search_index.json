{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to MkDocs\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-mkdocs", 
            "text": "For full documentation visit  mkdocs.org .", 
            "title": "Welcome to MkDocs"
        }, 
        {
            "location": "/#commands", 
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.", 
            "title": "Commands"
        }, 
        {
            "location": "/#project-layout", 
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Project layout"
        }, 
        {
            "location": "/api-auth/", 
            "text": "API Authentication using HMAC Hashing\n\n\nSource http://websec.io/2013/02/14/API-Authentication-Public-Private-Hashes.html\n\n\nHMAC means hash-based message authentication code''\n\n\nGenerate a Secret HASH\n\n\nHaving openssl installed ...\n\n\n$secret = base64URL(openssl_random_pseudo_bytes(32));\n\n\n\n... or without having it, just use a \nRandomLib\n\n\nClient request\n\n\n$userHash = '3441df0babc2a2dda551d7cd39fb235bc4e09cd1e4556bf261bb49188f548348';\n$secret = 'e249c439ed7697df2a4b045d97d4b9b7e1854c3ff8dd668c779013653913572e';\n$content    = json_encode(array(\n    'test' =\n 'content'\n));\n\n$hash = hash_hmac('sha256', $content, $secret);\n\n$headers = array(\n    'X-Public: '.$userHash,\n    'X-Hash: '.$hash\n);\n\n$ch = curl_init('http://test.localhost:8080/api-test/');\ncurl_setopt($ch,CURLOPT_HTTPHEADER,$headers);\ncurl_setopt($ch,CURLOPT_RETURNTRANSFER,true);\ncurl_setopt($ch,CURLOPT_POSTFIELDS,$content);\n\n$result = curl_exec($ch);\ncurl_close($ch);\n\necho \nRESULT\\n======\\n\n.print_r($result, true).\n\\n\\n\n;", 
            "title": "Api auth"
        }, 
        {
            "location": "/api-auth/#api-authentication-using-hmac-hashing", 
            "text": "Source http://websec.io/2013/02/14/API-Authentication-Public-Private-Hashes.html  HMAC means hash-based message authentication code''", 
            "title": "API Authentication using HMAC Hashing"
        }, 
        {
            "location": "/api-auth/#generate-a-secret-hash", 
            "text": "Having openssl installed ...  $secret = base64URL(openssl_random_pseudo_bytes(32));  ... or without having it, just use a  RandomLib", 
            "title": "Generate a Secret HASH"
        }, 
        {
            "location": "/api-auth/#client-request", 
            "text": "$userHash = '3441df0babc2a2dda551d7cd39fb235bc4e09cd1e4556bf261bb49188f548348';\n$secret = 'e249c439ed7697df2a4b045d97d4b9b7e1854c3ff8dd668c779013653913572e';\n$content    = json_encode(array(\n    'test' =  'content'\n));\n\n$hash = hash_hmac('sha256', $content, $secret);\n\n$headers = array(\n    'X-Public: '.$userHash,\n    'X-Hash: '.$hash\n);\n\n$ch = curl_init('http://test.localhost:8080/api-test/');\ncurl_setopt($ch,CURLOPT_HTTPHEADER,$headers);\ncurl_setopt($ch,CURLOPT_RETURNTRANSFER,true);\ncurl_setopt($ch,CURLOPT_POSTFIELDS,$content);\n\n$result = curl_exec($ch);\ncurl_close($ch);\n\necho  RESULT\\n======\\n .print_r($result, true). \\n\\n ;", 
            "title": "Client request"
        }, 
        {
            "location": "/atom/", 
            "text": "ATOM Editor Keybindings\n\n\nCore\n\n\n\n\n\n\n\n\nApp management\n\n\nAction\n\n\n\n\n\n\n\n\n\n\nCTRL + SHIFT + P\n\n\nCommand palette\n\n\n\n\n\n\nALT + 1,9\n\n\nFocus on pane 1,9\n\n\n\n\n\n\nCTRL + \\\n\n\nToggle Tree Pane\n\n\n\n\n\n\nCTRL + K U/D/L/R\n\n\nSplit pane Up/Down/Left/Right\n\n\n\n\n\n\nCTRL + K CTRL U/D/L/R\n\n\nFocus pane Up/Down/Left/Right\n\n\n\n\n\n\nCTRL + K CTRL p/n\n\n\nFocus Previous/Next pane\n\n\n\n\n\n\nCTRL + ALT +/-\n\n\nIncrease/Decrease size of pane\n\n\n\n\n\n\nCTRL + K CTRL + w\n\n\nClone pane\n\n\n\n\n\n\nCTRL + TAB\n\n\nNext item in pane\n\n\n\n\n\n\nCTRL + SHIFT + TAB\n\n\nPrevious item in pane\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEditing\n\n\nAction\n\n\n\n\n\n\n\n\n\n\nCTRL + a\n\n\nSelect All\n\n\n\n\n\n\nCTRL + z\n\n\nUndo\n\n\n\n\n\n\nCTRL + SHIFT + z\n\n\nRedo\n\n\n\n\n\n\nCTRL + [, ]\n\n\nIndent, Outdent\n\n\n\n\n\n\nCTRL + /\n\n\nComment\n\n\n\n\n\n\nCTRL + SHIFT + K\n\n\nDelete Line\n\n\n\n\n\n\nCTRL + SHIFT + D\n\n\nDuplicate Line\n\n\n\n\n\n\n\n\nPlugins\n\n\n\n\n\n\n\n\nProject Manager\n\n\nAction\n\n\n\n\n\n\n\n\n\n\nSHIFT + ALT + P\n\n\nList projects\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMarkdown\n\n\nAction\n\n\n\n\n\n\n\n\n\n\nCTRL + SHIFT + M\n\n\nMarkdown Preview\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGit / GitHub\n\n\nAction\n\n\n\n\n\n\n\n\n\n\nALT + g d\n\n\nToggle Git diff\n\n\n\n\n\n\nALT + g g\n\n\nOpen on GitHub", 
            "title": "Atom"
        }, 
        {
            "location": "/atom/#atom-editor-keybindings", 
            "text": "", 
            "title": "ATOM Editor Keybindings"
        }, 
        {
            "location": "/atom/#core", 
            "text": "App management  Action      CTRL + SHIFT + P  Command palette    ALT + 1,9  Focus on pane 1,9    CTRL + \\  Toggle Tree Pane    CTRL + K U/D/L/R  Split pane Up/Down/Left/Right    CTRL + K CTRL U/D/L/R  Focus pane Up/Down/Left/Right    CTRL + K CTRL p/n  Focus Previous/Next pane    CTRL + ALT +/-  Increase/Decrease size of pane    CTRL + K CTRL + w  Clone pane    CTRL + TAB  Next item in pane    CTRL + SHIFT + TAB  Previous item in pane        Editing  Action      CTRL + a  Select All    CTRL + z  Undo    CTRL + SHIFT + z  Redo    CTRL + [, ]  Indent, Outdent    CTRL + /  Comment    CTRL + SHIFT + K  Delete Line    CTRL + SHIFT + D  Duplicate Line", 
            "title": "Core"
        }, 
        {
            "location": "/atom/#plugins", 
            "text": "Project Manager  Action      SHIFT + ALT + P  List projects        Markdown  Action      CTRL + SHIFT + M  Markdown Preview        Git / GitHub  Action      ALT + g d  Toggle Git diff    ALT + g g  Open on GitHub", 
            "title": "Plugins"
        }, 
        {
            "location": "/bash/", 
            "text": "Bashism\n\n\nLoops\n\n\nLoop on a rows of a text file\n\n\n#!/bin/sh\nlist=/tmp/blacklists/porn/domains\ncat $list | while read domains\ndo\n    echo $domains\ndone\n\n\n\nLoop on a counter\n\n\ncounter=1\nwhile [ $counter -le 10 ]\ndo\necho $counter\n((counter++))\ndone", 
            "title": "Bash"
        }, 
        {
            "location": "/bash/#bashism", 
            "text": "", 
            "title": "Bashism"
        }, 
        {
            "location": "/bash/#loops", 
            "text": "Loop on a rows of a text file  #!/bin/sh\nlist=/tmp/blacklists/porn/domains\ncat $list | while read domains\ndo\n    echo $domains\ndone  Loop on a counter  counter=1\nwhile [ $counter -le 10 ]\ndo\necho $counter\n((counter++))\ndone", 
            "title": "Loops"
        }, 
        {
            "location": "/bind/", 
            "text": "Bind Name Server\n\n\nDetailed Logging\n\n\nlogging {\n\n  channel default_file { file \"/var/log/named/default.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel general_file { file \"/var/log/named/general.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel database_file { file \"/var/log/named/database.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel security_file { file \"/var/log/named/security.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel config_file { file \"/var/log/named/config.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel resolver_file { file \"/var/log/named/resolver.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel xfer-in_file { file \"/var/log/named/xfer-in.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel xfer-out_file { file \"/var/log/named/xfer-out.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel notify_file { file \"/var/log/named/notify.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel client_file { file \"/var/log/named/client.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel unmatched_file { file \"/var/log/named/unmatched.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel queries_file { file \"/var/log/named/queries.log\" versions 3 size 80m; severity dynamic; print-time yes; };\n  channel network_file { file \"/var/log/named/network.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel update_file { file \"/var/log/named/update.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel dispatch_file { file \"/var/log/named/dispatch.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel dnssec_file { file \"/var/log/named/dnssec.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel lame-servers_file { file \"/var/log/named/lame-servers.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n\n  category default { default_file; };\n  category general { general_file; };\n  category database { database_file; };\n  category security { security_file; };\n  category config { config_file; };\n  category resolver { resolver_file; };\n  category xfer-in { xfer-in_file; };\n  category xfer-out { xfer-out_file; };\n  category notify { notify_file; };\n  category client { client_file; };\n  category unmatched { unmatched_file; };\n  category queries { queries_file; };\n  category network { network_file; };\n  category update { update_file; };\n  category dispatch { dispatch_file; };\n  category dnssec { dnssec_file; };\n  category lame-servers { lame-servers_file; };\n\n};", 
            "title": "Bind"
        }, 
        {
            "location": "/bind/#bind-name-server", 
            "text": "", 
            "title": "Bind Name Server"
        }, 
        {
            "location": "/bind/#detailed-logging", 
            "text": "logging {\n\n  channel default_file { file \"/var/log/named/default.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel general_file { file \"/var/log/named/general.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel database_file { file \"/var/log/named/database.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel security_file { file \"/var/log/named/security.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel config_file { file \"/var/log/named/config.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel resolver_file { file \"/var/log/named/resolver.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel xfer-in_file { file \"/var/log/named/xfer-in.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel xfer-out_file { file \"/var/log/named/xfer-out.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel notify_file { file \"/var/log/named/notify.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel client_file { file \"/var/log/named/client.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel unmatched_file { file \"/var/log/named/unmatched.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel queries_file { file \"/var/log/named/queries.log\" versions 3 size 80m; severity dynamic; print-time yes; };\n  channel network_file { file \"/var/log/named/network.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel update_file { file \"/var/log/named/update.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel dispatch_file { file \"/var/log/named/dispatch.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel dnssec_file { file \"/var/log/named/dnssec.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n  channel lame-servers_file { file \"/var/log/named/lame-servers.log\" versions 3 size 5m; severity dynamic; print-time yes; };\n\n  category default { default_file; };\n  category general { general_file; };\n  category database { database_file; };\n  category security { security_file; };\n  category config { config_file; };\n  category resolver { resolver_file; };\n  category xfer-in { xfer-in_file; };\n  category xfer-out { xfer-out_file; };\n  category notify { notify_file; };\n  category client { client_file; };\n  category unmatched { unmatched_file; };\n  category queries { queries_file; };\n  category network { network_file; };\n  category update { update_file; };\n  category dispatch { dispatch_file; };\n  category dnssec { dnssec_file; };\n  category lame-servers { lame-servers_file; };\n\n};", 
            "title": "Detailed Logging"
        }, 
        {
            "location": "/centos/", 
            "text": "CentOS\n\n\nRepositories\n\n\nExtra Packages (community approved by CentOS)\n\n\n# yum install epel-release\n\n\n\nRackspace updated packages for PHP/Mysql/python\n\n\n# curl -fsSL https://setup.ius.io/ | sh\n\n\n\nPuppet collections\n\n\n# rpm -ivh https://yum.puppetlabs.com/puppetlabs-release-pc1-el-(5|6|7).noarch.rpm\n\n\n\nSysdig\n\n\nsysdig requires kernel headers\n\n\nrpm --import https://s3.amazonaws.com/download.draios.com/DRAIOS-GPG-KEY.public\ncurl -s -o /etc/yum.repos.d/draios.repo http://download.draios.com/stable/rpm/draios.repo\n\nyum -y install kernel-devel-$(uname -r)\nyum -y install sysdig\n\n\n\nDocker\n\n\nRequires kernel \n= 3.10, probably centos 6.5 and later\n\n\ncurl -fsSL https://get.docker.com/ | sh\nsudo service docker start\nsudo chkconfig docker on\nsudo groupadd docker\nsudo usermod -aG docker `whoami`\n\n\n\nNetdata\n\n\nMonitoring system\n\n\nyum install zlib-devel libuuid-devel libmnl-devel gcc make git autoconf autogen automake pkgconfig\ngit clone https://github.com/firehol/netdata.git \u2013depth=1 \n cd netdata \n ./netdata-installer.sh\n\n\n\nFor more info see also \nhttps://wiki.centos.org/AdditionalResources/Repositories", 
            "title": "Centos"
        }, 
        {
            "location": "/centos/#centos", 
            "text": "", 
            "title": "CentOS"
        }, 
        {
            "location": "/centos/#repositories", 
            "text": "", 
            "title": "Repositories"
        }, 
        {
            "location": "/centos/#extra-packages-community-approved-by-centos", 
            "text": "# yum install epel-release", 
            "title": "Extra Packages (community approved by CentOS)"
        }, 
        {
            "location": "/centos/#rackspace-updated-packages-for-phpmysqlpython", 
            "text": "# curl -fsSL https://setup.ius.io/ | sh", 
            "title": "Rackspace updated packages for PHP/Mysql/python"
        }, 
        {
            "location": "/centos/#puppet-collections", 
            "text": "# rpm -ivh https://yum.puppetlabs.com/puppetlabs-release-pc1-el-(5|6|7).noarch.rpm", 
            "title": "Puppet collections"
        }, 
        {
            "location": "/centos/#sysdig", 
            "text": "sysdig requires kernel headers  rpm --import https://s3.amazonaws.com/download.draios.com/DRAIOS-GPG-KEY.public\ncurl -s -o /etc/yum.repos.d/draios.repo http://download.draios.com/stable/rpm/draios.repo\n\nyum -y install kernel-devel-$(uname -r)\nyum -y install sysdig", 
            "title": "Sysdig"
        }, 
        {
            "location": "/centos/#docker", 
            "text": "Requires kernel  = 3.10, probably centos 6.5 and later  curl -fsSL https://get.docker.com/ | sh\nsudo service docker start\nsudo chkconfig docker on\nsudo groupadd docker\nsudo usermod -aG docker `whoami`", 
            "title": "Docker"
        }, 
        {
            "location": "/centos/#netdata", 
            "text": "Monitoring system  yum install zlib-devel libuuid-devel libmnl-devel gcc make git autoconf autogen automake pkgconfig\ngit clone https://github.com/firehol/netdata.git \u2013depth=1   cd netdata   ./netdata-installer.sh  For more info see also  https://wiki.centos.org/AdditionalResources/Repositories", 
            "title": "Netdata"
        }, 
        {
            "location": "/changelog/", 
            "text": "LoreLLo commit \nhttps://github.com/lorello/lorello.github.io/commit/fd108b2387591000d0389d81de7589953ac28181|fd108b2\n di 2 minutes ago: Updated changelog\n\n\n\n\n\n\nLoreLLo commit \nhttps://github.com/lorello/lorello.github.io/commit/b3295130edec70d3af4222470b26d7898f183a72|b329513\n di 3 minutes ago: minor format change\n\n\n\n\n\n\nLoreLLo commit \nhttps://github.com/lorello/lorello.github.io/commit/7ba8d303abed25623e73faa43dc3393987fb6be1|7ba8d30\n di 14 minutes ago: Updated changelog\n\n\n\n\n\n\nLoreLLo commit \nhttps://github.com/lorello/lorello.github.io/commit/50dfa2bf2a90e82bd35876aa2503d62a5785b2fa|50dfa2b\n di 16 minutes ago: Updated changelog\n\n\n\n\n\n\nLoreLLo commit \nhttps://github.com/lorello/lorello.github.io/commit/1e55e02c334a4d80317a1e4f9fa6609e45b6dca4|1e55e02\n di 16 minutes ago: More info on systemd services config\n\n\n\n\n\n\nLoreLLo commit \nhttps://github.com/lorello/lorello.github.io/commit/557cf4b1476428a725f46cfb93fdf6112c1e5151|557cf4b\n di 4 weeks ago: Updated changelog\n\n\n\n\n\n\nLoreLLo commit \nhttps://github.com/lorello/lorello.github.io/commit/8a300df88539c47d9309fced35fa229ae6fccdae|8a300df\n di 4 weeks ago: Updated changelog\n\n\n\n\n\n\nLoreLLo commit \nhttps://github.com/lorello/lorello.github.io/commit/8041de80f71855137df24290abdccca397ee805c|8041de8\n di 4 weeks ago: small updates", 
            "title": "Changelog"
        }, 
        {
            "location": "/cisco/", 
            "text": "Basic Cisco CLI\n\n\nList intefaces with descriptions\n\n\nshow int description\n\n\n\nShow detailed config for a specific interface\n\n\nshow running-config interface FastEthernet4/38\n\n\n\nShow list of vlan and connected interfaces\n\n\nshow vlan brief\n\n\n\nSetup an interface with\n\n\ninterface GigabitEthernet1/0/3\n description Gianni's desktop\n switchport access vlan 100\n switchport trunk native vlan 100\n switchport trunk allowed vlan 100,104\n switchport mode trunk\n spanning-tree bpduguard disable\nend\n\n\n\nShutdown an interface\n\n\n# enable\n# configure terminal\n(config)# interface FastEthernet 0/1\n(config-subif)# shutdown\n(config-subif)# end\n# write\n\n\n\nSet a description\n\n\n# en\n# conf t\n(config)# int FastEthernet 0/1\n(config-subif)# description This is 1st Port of My Switch\n(config-subif)# end\n# write", 
            "title": "Cisco"
        }, 
        {
            "location": "/cisco/#basic-cisco-cli", 
            "text": "", 
            "title": "Basic Cisco CLI"
        }, 
        {
            "location": "/cisco/#list-intefaces-with-descriptions", 
            "text": "show int description", 
            "title": "List intefaces with descriptions"
        }, 
        {
            "location": "/cisco/#show-detailed-config-for-a-specific-interface", 
            "text": "show running-config interface FastEthernet4/38", 
            "title": "Show detailed config for a specific interface"
        }, 
        {
            "location": "/cisco/#show-list-of-vlan-and-connected-interfaces", 
            "text": "show vlan brief", 
            "title": "Show list of vlan and connected interfaces"
        }, 
        {
            "location": "/cisco/#setup-an-interface-with", 
            "text": "interface GigabitEthernet1/0/3\n description Gianni's desktop\n switchport access vlan 100\n switchport trunk native vlan 100\n switchport trunk allowed vlan 100,104\n switchport mode trunk\n spanning-tree bpduguard disable\nend", 
            "title": "Setup an interface with"
        }, 
        {
            "location": "/cisco/#shutdown-an-interface", 
            "text": "# enable\n# configure terminal\n(config)# interface FastEthernet 0/1\n(config-subif)# shutdown\n(config-subif)# end\n# write", 
            "title": "Shutdown an interface"
        }, 
        {
            "location": "/cisco/#set-a-description", 
            "text": "# en\n# conf t\n(config)# int FastEthernet 0/1\n(config-subif)# description This is 1st Port of My Switch\n(config-subif)# end\n# write", 
            "title": "Set a description"
        }, 
        {
            "location": "/docker/", 
            "text": "Docker\n\n\nBasics\n\n\nSearch on Docker Hub Registry and pull an image to run locally\n\n\ndocker search ubuntu\ndocker pull ubuntu\n\n\n\nRun a command in a box\n\n\ndocker run \nimage\n \ncommand\n\n\n\n\nExample\n\n\ndocker run ubuntu:14.04 /bin/echo 'Hello world'\n\n\n\nAnd then?\n    docker ps -l\n    docker commit -m \"bla bla\" -u lorello \n \n\n    docker inspect \n\n\nContainers are never ephimeral, but they get a name only with a \ncommit\n\n\nInteractive and daemon containers\n\n\nRun a container with a TTY and with an interactive STDIN\n\n\ndocker run -t -i ubuntu:14.04 /bin/bash\n\n\n\nRun a daemonized process inside a container, inspect logs realtime,\nkill the container\n\n\nMYCONTAINER=$(docker run -d ubuntu:14.04 /bin/sh -c \"while true; do echo hello world; sleep 1; done\")\ndocker logs $MYCONTAINER\ndocker kill $MYCONTAINER\n\n\n\nYou can \nsave\n the container created using\n\n\ndocker commit -m \"added stupid loop\" -a lorello $MYCONTAINER lorello/stupid:trashme\ndocker rmi lorello/stupid:trashme\n\n\n\nAdding \n-P\n options to \nrun\n command let docker maps any required network port to the host.\nThen you can inspect ports mapped using the \nps\n command or running\n\n\ndocker ports $MYCONTAINER\n\n\n\nDockerfile\n\n\nBuild \n tag an image using a \nDockerfile\n\n\ndocker build -t=\"lorello/ubuntu:myapp\" .\n\n\n\nExposing services\n\n\nUse \nEXPOSE $port\n inside Dockerfile and then run the container with\n\n\n$MYCONTAINER=$(docker run -d -P \nIMAGE:TAG\n)\ndocker port $MYCONTAINER $PORT\n\n\n\nClean unused images\n\n\nRemove untagged images\n\n\ndocker rmi -f $(docker images | grep \"\nnone\n\" | awk \"{print \\$3}\")\n\n\n\nRemove unused images\n\n\ndocker images -q |xargs docker rmi\n\n\n\nVolumes\n\n\nData Volume Container\n\n\nCreate container volume for a mongodb server\n\n\ndocker run -v /data/db \u2013name db_data busybox echo Data only volume for mongo\n\n\n\nRun mongo instance with mounted volume\n\n\ndocker run -d -P \u2013volumes-from db_data \u2013name mymongo mongo\n\n\n\nEnter inside a running container (NSENTER)\n\n\nInstall \nnsenter\n utility and \ndocker-enter\n command doing this on the host\n\n\ndocker run --rm -v /usr/local/bin:/target jpetazzo/nsenter\n\n\n\nLaunch a bash inside the container $NAME running\n\n\ndocker-enter $NAME bash\n\n\n\nUse MacVlan interfaces\n\n\nExample: you want an \nhipache\n with a public interface directly connected\nto phisycal device, skipping the default NAT of docker.\n\n\nLe the host use the macvlan interface\n\n\nMove a host from traditional \neth0\n interface to \nmacvlan\n interface as main\nnetwork card, so it can play with a container that use \nmacvlan\n interface\n\n\nip addr del 10.1.1.123/24 dev eth0\nip link add link eth0 dev eth0m type macvlan mode bridge\nip link set eth0m up\nip addr add 10.1.1.123/24 dev eth0m\nroute add default gw 10.1.1.254\n\n\n\nStart a container that use the same macvlan interface\n\n\nCID=$(docker run -d ...)\npipework eth0 $CID 10.1.1.234/24@10.1.1.254", 
            "title": "Docker"
        }, 
        {
            "location": "/docker/#docker", 
            "text": "", 
            "title": "Docker"
        }, 
        {
            "location": "/docker/#basics", 
            "text": "Search on Docker Hub Registry and pull an image to run locally  docker search ubuntu\ndocker pull ubuntu  Run a command in a box  docker run  image   command   Example  docker run ubuntu:14.04 /bin/echo 'Hello world'  And then?\n    docker ps -l\n    docker commit -m \"bla bla\" -u lorello    \n    docker inspect   Containers are never ephimeral, but they get a name only with a  commit", 
            "title": "Basics"
        }, 
        {
            "location": "/docker/#interactive-and-daemon-containers", 
            "text": "Run a container with a TTY and with an interactive STDIN  docker run -t -i ubuntu:14.04 /bin/bash  Run a daemonized process inside a container, inspect logs realtime,\nkill the container  MYCONTAINER=$(docker run -d ubuntu:14.04 /bin/sh -c \"while true; do echo hello world; sleep 1; done\")\ndocker logs $MYCONTAINER\ndocker kill $MYCONTAINER  You can  save  the container created using  docker commit -m \"added stupid loop\" -a lorello $MYCONTAINER lorello/stupid:trashme\ndocker rmi lorello/stupid:trashme  Adding  -P  options to  run  command let docker maps any required network port to the host.\nThen you can inspect ports mapped using the  ps  command or running  docker ports $MYCONTAINER", 
            "title": "Interactive and daemon containers"
        }, 
        {
            "location": "/docker/#dockerfile", 
            "text": "Build   tag an image using a  Dockerfile  docker build -t=\"lorello/ubuntu:myapp\" .", 
            "title": "Dockerfile"
        }, 
        {
            "location": "/docker/#exposing-services", 
            "text": "Use  EXPOSE $port  inside Dockerfile and then run the container with  $MYCONTAINER=$(docker run -d -P  IMAGE:TAG )\ndocker port $MYCONTAINER $PORT", 
            "title": "Exposing services"
        }, 
        {
            "location": "/docker/#clean-unused-images", 
            "text": "Remove untagged images  docker rmi -f $(docker images | grep \" none \" | awk \"{print \\$3}\")  Remove unused images  docker images -q |xargs docker rmi", 
            "title": "Clean unused images"
        }, 
        {
            "location": "/docker/#volumes", 
            "text": "", 
            "title": "Volumes"
        }, 
        {
            "location": "/docker/#data-volume-container", 
            "text": "Create container volume for a mongodb server  docker run -v /data/db \u2013name db_data busybox echo Data only volume for mongo  Run mongo instance with mounted volume  docker run -d -P \u2013volumes-from db_data \u2013name mymongo mongo", 
            "title": "Data Volume Container"
        }, 
        {
            "location": "/docker/#enter-inside-a-running-container-nsenter", 
            "text": "Install  nsenter  utility and  docker-enter  command doing this on the host  docker run --rm -v /usr/local/bin:/target jpetazzo/nsenter  Launch a bash inside the container $NAME running  docker-enter $NAME bash", 
            "title": "Enter inside a running container (NSENTER)"
        }, 
        {
            "location": "/docker/#use-macvlan-interfaces", 
            "text": "Example: you want an  hipache  with a public interface directly connected\nto phisycal device, skipping the default NAT of docker.", 
            "title": "Use MacVlan interfaces"
        }, 
        {
            "location": "/docker/#le-the-host-use-the-macvlan-interface", 
            "text": "Move a host from traditional  eth0  interface to  macvlan  interface as main\nnetwork card, so it can play with a container that use  macvlan  interface  ip addr del 10.1.1.123/24 dev eth0\nip link add link eth0 dev eth0m type macvlan mode bridge\nip link set eth0m up\nip addr add 10.1.1.123/24 dev eth0m\nroute add default gw 10.1.1.254", 
            "title": "Le the host use the macvlan interface"
        }, 
        {
            "location": "/docker/#start-a-container-that-use-the-same-macvlan-interface", 
            "text": "CID=$(docker run -d ...)\npipework eth0 $CID 10.1.1.234/24@10.1.1.254", 
            "title": "Start a container that use the same macvlan interface"
        }, 
        {
            "location": "/git/", 
            "text": "Git Versioning System\n\n\nConfig\n\n\ngit config --global http.postBuffer 1024000000\n\n\n\nChange Log generation\n\n\nList file names changed between two revisions IDs\n\n\ngit diff $oldrev $newrev --diff-filter=ACDMR --name-only\n\n\n\nList changes between two revisions IDs, with author and commit message\n\n\n# sed removes double \\n that come from git log (%B)\ngit log --abbrev-commit --pretty=format:'* %h %an %ar: %B' ${oldrev}..${newrev} | sed ':a;N;$!ba;s/\\n\\n/\\n/g'\n\n\n\nList changes after a specified date, with author and commit message\n\n\ngit log --abbrev-commit --pretty=format:'* %h %an %ar: %B' --after='2016-02-01'| sed ':a;N;$!ba;s/\\n\\n/\\n/g'\n\n\n\nA changelog for Slack chat\n\n\nBRANCH=$(git rev-parse --abbrev-ref HEAD)\nHOSTNAME=$(hostname -f)\n\n# Links to changed files\nFILES_CHANGED=''\nfor ITEM in $(git diff $oldrev $newrev --diff-filter=ACDMR --name-only); do\n  FILES_CHANGED=\"$FILES_CHANGED\\n* \n$GIT_REPO/blob/$newrev/$ITEM|$ITEM\n\"\ndone\n\nNUM_CHANGED=$(git diff $oldrev $newrev --diff-filter=ACDMR --name-only | wc -l)\nBASEURL=\"$GIT_REPO/commit\"\n\nGITLOG=$(git log --abbrev-commit --pretty=format:\"* %an commit \n$BASEURL/%H|%h\n di %ar: %B\" ${oldrev}..${newrev} | sed ':a;N;$!ba;s/\\n\\n/\\n/g')\n\nCHANGELOG=\"*$NUM_CHANGED* files changed:\\n$FILES_CHANGED\\n\\n*Details*:\\n$GITLOG\\n\"", 
            "title": "Git"
        }, 
        {
            "location": "/git/#git-versioning-system", 
            "text": "", 
            "title": "Git Versioning System"
        }, 
        {
            "location": "/git/#config", 
            "text": "git config --global http.postBuffer 1024000000", 
            "title": "Config"
        }, 
        {
            "location": "/git/#change-log-generation", 
            "text": "List file names changed between two revisions IDs  git diff $oldrev $newrev --diff-filter=ACDMR --name-only  List changes between two revisions IDs, with author and commit message  # sed removes double \\n that come from git log (%B)\ngit log --abbrev-commit --pretty=format:'* %h %an %ar: %B' ${oldrev}..${newrev} | sed ':a;N;$!ba;s/\\n\\n/\\n/g'  List changes after a specified date, with author and commit message  git log --abbrev-commit --pretty=format:'* %h %an %ar: %B' --after='2016-02-01'| sed ':a;N;$!ba;s/\\n\\n/\\n/g'  A changelog for Slack chat  BRANCH=$(git rev-parse --abbrev-ref HEAD)\nHOSTNAME=$(hostname -f)\n\n# Links to changed files\nFILES_CHANGED=''\nfor ITEM in $(git diff $oldrev $newrev --diff-filter=ACDMR --name-only); do\n  FILES_CHANGED=\"$FILES_CHANGED\\n*  $GIT_REPO/blob/$newrev/$ITEM|$ITEM \"\ndone\n\nNUM_CHANGED=$(git diff $oldrev $newrev --diff-filter=ACDMR --name-only | wc -l)\nBASEURL=\"$GIT_REPO/commit\"\n\nGITLOG=$(git log --abbrev-commit --pretty=format:\"* %an commit  $BASEURL/%H|%h  di %ar: %B\" ${oldrev}..${newrev} | sed ':a;N;$!ba;s/\\n\\n/\\n/g')\n\nCHANGELOG=\"*$NUM_CHANGED* files changed:\\n$FILES_CHANGED\\n\\n*Details*:\\n$GITLOG\\n\"", 
            "title": "Change Log generation"
        }, 
        {
            "location": "/ip/", 
            "text": "Linux IP\n\n\nDevices\n\n\nShow and change device settings\n\n\nip link set dev eth2 up|down\nip link set dev eth0 up|down arp on|off name NAME mtu 9000\n\n\n\nShow current settings for interface\n\n\nip link show dev NAME\n\n\n\nShow only UP interfaces\n    ip link show up\n\n\nVlan\n\n\nAdd a vlan interface\n\n\nip link add link eth1 name eth1.101 type vlan id 101\n\n\n\nRouting\n\n\nip route show\nip route add 192.168.1.0/24 dev eth0\nip route add default via 192.168.1.254", 
            "title": "Ip"
        }, 
        {
            "location": "/ip/#linux-ip", 
            "text": "", 
            "title": "Linux IP"
        }, 
        {
            "location": "/ip/#devices", 
            "text": "Show and change device settings  ip link set dev eth2 up|down\nip link set dev eth0 up|down arp on|off name NAME mtu 9000  Show current settings for interface  ip link show dev NAME  Show only UP interfaces\n    ip link show up", 
            "title": "Devices"
        }, 
        {
            "location": "/ip/#vlan", 
            "text": "Add a vlan interface  ip link add link eth1 name eth1.101 type vlan id 101", 
            "title": "Vlan"
        }, 
        {
            "location": "/ip/#routing", 
            "text": "ip route show\nip route add 192.168.1.0/24 dev eth0\nip route add default via 192.168.1.254", 
            "title": "Routing"
        }, 
        {
            "location": "/lvm/", 
            "text": "Managing Logical Volumes\n\n\nImagine to manage SDB\n\n\nCreate an LVM-ready partition /dev/sdb1\n\n\nNot strictly necessary, if not needed skip this step \nand use directly sdb device, instead of a partition\n\n\nfdisk /dev/sdb\nn p 1 t 8e p w\n\n\n\nAdd LVM Magic\n\n\npvcreate /dev/sdb1\nvgcreate hdd_vg /dev/sdb1\nlvcreate -L 150G -n vmware hdd_vg\n\nmkfs -t ext4 /dev/hdd_vg/vmstore\n\nblkid /dev/hdd_vg/vmstore\n\nmkdir -p /mnt/vmstore\n\n\n\nedit \n/etc/fstab\n accordingly then\n\n\nmount -a", 
            "title": "Lvm"
        }, 
        {
            "location": "/lvm/#managing-logical-volumes", 
            "text": "Imagine to manage SDB", 
            "title": "Managing Logical Volumes"
        }, 
        {
            "location": "/lvm/#create-an-lvm-ready-partition-devsdb1", 
            "text": "Not strictly necessary, if not needed skip this step \nand use directly sdb device, instead of a partition  fdisk /dev/sdb\nn p 1 t 8e p w", 
            "title": "Create an LVM-ready partition /dev/sdb1"
        }, 
        {
            "location": "/lvm/#add-lvm-magic", 
            "text": "pvcreate /dev/sdb1\nvgcreate hdd_vg /dev/sdb1\nlvcreate -L 150G -n vmware hdd_vg\n\nmkfs -t ext4 /dev/hdd_vg/vmstore\n\nblkid /dev/hdd_vg/vmstore\n\nmkdir -p /mnt/vmstore  edit  /etc/fstab  accordingly then  mount -a", 
            "title": "Add LVM Magic"
        }, 
        {
            "location": "/mysql/", 
            "text": "MySQL\n\n\nDebug connections problem\n\n\n# mysql -e \"show status like \\\"%onn%\\\";\"\n# mysqladmin status\nmysql\n show processlist;\n\n\n\nUsers\n\n\nmysql\n CREATE USER 'newuser'@'localhost' IDENTIFIED BY 'newpass';\nmysql\n SET PASSWORD FOR 'existinguser'@'localhost' = PASSWORD('existingpass');\n# Generate encrypted version of a password\nmysql\n SELECT PASSWORD('mypass');\n\n\n\nGrants\n\n\nmysql\n SHOW GRANTS FOR 'francis'@'localhost';\nmysql\n GRANT ALL ON customer.* TO 'francis'@'localhost' WITH MAX_USER_CONNECTIONS 10;\n\n\n\nTo change password or resource limits for an existing user, without \nchanging privileges\n\n\nmysql\n GRANT USAGE ON *.* TO 'francis'@'localhost' WITH MAX_USER_CONNECTIONS 10;\n\n\n\nDumps\n\n\n# Only DATA\nmysqldump --skip-opt --skip-create-options --add-locks --no-create-info DBNAME \n dump-data-only.sql\n\n# Disable foreign key checks\nSET AUTOCOMMIT=0;\nSET FOREIGN_KEY_CHECKS=0;\n\n\n\nMysql Replica\n\n\nmysql\n GRANT REPLICATION SLAVE ON *.* TO 'slave_user'@'%' IDENTIFIED BY 'password';\nmysql\n FLUSH PRIVILEGES;\n\nmysql\n CHANGE MASTER TO \nMASTER_HOST='12.34.56.789',\nMASTER_USER='slave_user',\nMASTER_PASSWORD='password',\nMASTER_LOG_FILE='mysql-bin.000001',\nMASTER_LOG_POS=107;\n\n\nmysql\n SET GLOBAL SQL_SLAVE_SKIP_COUNTER = 1; SLAVE START;", 
            "title": "Mysql"
        }, 
        {
            "location": "/mysql/#mysql", 
            "text": "", 
            "title": "MySQL"
        }, 
        {
            "location": "/mysql/#debug-connections-problem", 
            "text": "# mysql -e \"show status like \\\"%onn%\\\";\"\n# mysqladmin status\nmysql  show processlist;", 
            "title": "Debug connections problem"
        }, 
        {
            "location": "/mysql/#users", 
            "text": "mysql  CREATE USER 'newuser'@'localhost' IDENTIFIED BY 'newpass';\nmysql  SET PASSWORD FOR 'existinguser'@'localhost' = PASSWORD('existingpass');\n# Generate encrypted version of a password\nmysql  SELECT PASSWORD('mypass');", 
            "title": "Users"
        }, 
        {
            "location": "/mysql/#grants", 
            "text": "mysql  SHOW GRANTS FOR 'francis'@'localhost';\nmysql  GRANT ALL ON customer.* TO 'francis'@'localhost' WITH MAX_USER_CONNECTIONS 10;  To change password or resource limits for an existing user, without \nchanging privileges  mysql  GRANT USAGE ON *.* TO 'francis'@'localhost' WITH MAX_USER_CONNECTIONS 10;", 
            "title": "Grants"
        }, 
        {
            "location": "/mysql/#dumps", 
            "text": "# Only DATA\nmysqldump --skip-opt --skip-create-options --add-locks --no-create-info DBNAME   dump-data-only.sql\n\n# Disable foreign key checks\nSET AUTOCOMMIT=0;\nSET FOREIGN_KEY_CHECKS=0;", 
            "title": "Dumps"
        }, 
        {
            "location": "/mysql/#mysql-replica", 
            "text": "mysql  GRANT REPLICATION SLAVE ON *.* TO 'slave_user'@'%' IDENTIFIED BY 'password';\nmysql  FLUSH PRIVILEGES;\n\nmysql  CHANGE MASTER TO \nMASTER_HOST='12.34.56.789',\nMASTER_USER='slave_user',\nMASTER_PASSWORD='password',\nMASTER_LOG_FILE='mysql-bin.000001',\nMASTER_LOG_POS=107;\n\n\nmysql  SET GLOBAL SQL_SLAVE_SKIP_COUNTER = 1; SLAVE START;", 
            "title": "Mysql Replica"
        }, 
        {
            "location": "/nginx/", 
            "text": "Nginx\n\n\ndebugging rewrites rules\n\n\nMake sure you have \nnotice\n as loglevel of \nerror_log\n\n\nerror_log  /var/log/nginx/www.yoursite.com.error.log notice;\nrewrite_log on;", 
            "title": "Nginx"
        }, 
        {
            "location": "/nginx/#nginx", 
            "text": "", 
            "title": "Nginx"
        }, 
        {
            "location": "/nginx/#debugging-rewrites-rules", 
            "text": "Make sure you have  notice  as loglevel of  error_log  error_log  /var/log/nginx/www.yoursite.com.error.log notice;\nrewrite_log on;", 
            "title": "debugging rewrites rules"
        }, 
        {
            "location": "/octohost/", 
            "text": "Octohost\n\n\n\n\nOfficial documentation\n\n\nocto cli\n\n\n\n\nHow to deploy a container\n\n\nCreate a container\n and add octohost as remote\n\n\ngit remote add git@octo.lorello.it:\nAPPNAME\n.git\ngit push\n\n\n\nHow to enable a new user on Octohost\n\n\n$ ssh root@octohost\n# gitreceive key-upload git\n\n\n\nPaste the public key and press CTRL+D. From another host\n\n\ncat ~/.ssh/id_rsa.pub | ssh root@octohost \"sudo gitreceive upload-key lorello\"", 
            "title": "Octohost"
        }, 
        {
            "location": "/octohost/#octohost", 
            "text": "Official documentation  octo cli", 
            "title": "Octohost"
        }, 
        {
            "location": "/octohost/#how-to-deploy-a-container", 
            "text": "Create a container  and add octohost as remote  git remote add git@octo.lorello.it: APPNAME .git\ngit push", 
            "title": "How to deploy a container"
        }, 
        {
            "location": "/octohost/#how-to-enable-a-new-user-on-octohost", 
            "text": "$ ssh root@octohost\n# gitreceive key-upload git  Paste the public key and press CTRL+D. From another host  cat ~/.ssh/id_rsa.pub | ssh root@octohost \"sudo gitreceive upload-key lorello\"", 
            "title": "How to enable a new user on Octohost"
        }, 
        {
            "location": "/openssl/", 
            "text": "OpenSSL\n\n\nCreate private key\n\n\nopenssl genrsa -des3 -out server.key 1024\n\n\n\nGenerate a CSR (Certificate Signing Request)\n\n\nopenssl req -new -key server.key -out server.csr\n\n\n\nRemove Passphrase from Key\n\n\nopenssl rsa -in server-with-passphrase.key -out server.key\n\n\n\nGenerating a Self-Signed Certificate\n\n\nopenssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt\n\n\n\nConvert x509 to pem\n\n\nopenssl x509 -inform der -in server.crt -out server.pem\n\n\n\npkcs12 to pem \u2013 key only\n\n\nopenssl pkcs12 -nocerts -in c:\\server.pfx -out c:\\server-key.key\n\n\n\npkcs12 to pem \u2013 certificate only\n\n\nopenssl pkcs12 -nokeys -in server.pfx -out server-cert.cer\n\n\n\nCheck a private key\n\n\nopenssl rsa -in privateKey.key -check\n\n\n\nCheck a certificate\n\n\nopenssl x509 -in certificate.crt -text -noout\n\n\n\nsplit pfx file\n\n\nopenssl pkcs12 -in your.pfx -clcerts -nokeys -out yourcert.pem\nopenssl pkcs12 -in your.pfx -nocerts -out yourkey.pem", 
            "title": "Openssl"
        }, 
        {
            "location": "/openssl/#openssl", 
            "text": "Create private key  openssl genrsa -des3 -out server.key 1024  Generate a CSR (Certificate Signing Request)  openssl req -new -key server.key -out server.csr  Remove Passphrase from Key  openssl rsa -in server-with-passphrase.key -out server.key  Generating a Self-Signed Certificate  openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt  Convert x509 to pem  openssl x509 -inform der -in server.crt -out server.pem  pkcs12 to pem \u2013 key only  openssl pkcs12 -nocerts -in c:\\server.pfx -out c:\\server-key.key  pkcs12 to pem \u2013 certificate only  openssl pkcs12 -nokeys -in server.pfx -out server-cert.cer  Check a private key  openssl rsa -in privateKey.key -check  Check a certificate  openssl x509 -in certificate.crt -text -noout  split pfx file  openssl pkcs12 -in your.pfx -clcerts -nokeys -out yourcert.pem\nopenssl pkcs12 -in your.pfx -nocerts -out yourkey.pem", 
            "title": "OpenSSL"
        }, 
        {
            "location": "/php/", 
            "text": "PHP\n\n\nPhp-fpm\n\n\nnewrelic.appname = \"web30 - liste.lillinet.org\"\npost_max_size = 52M\nupload_max_filesize = 52M\nmemory_limit = 192M\ncatch_workers_output = yes\nlog_errors = On\ndisplay_errors = On\nlog_level = notice\n\n\n\nLogs everything to file (htaccess format)\n\n\nphp_flag display_startup_errors on\nphp_flag display_errors off\nphp_flag html_errors off\nphp_flag log_errors on\n#php_flag ignore_repeated_errors off\n#php_flag ignore_repeated_source off\n#php_flag report_memleaks on\n#php_flag track_errors on\n#php_value docref_root 0\n#php_value docref_ext 0\nphp_value error_reporting -1\n#php_value log_errors_max_len 0#\nphp_value error_log /var/local/www/web1/phperrors.log\n\n\n\nThis logs sintax erros too, not logged by default in apache error log\nor not logged if you're passing options inside the php file itself using\nini_set.", 
            "title": "Php"
        }, 
        {
            "location": "/php/#php", 
            "text": "", 
            "title": "PHP"
        }, 
        {
            "location": "/php/#php-fpm", 
            "text": "newrelic.appname = \"web30 - liste.lillinet.org\"\npost_max_size = 52M\nupload_max_filesize = 52M\nmemory_limit = 192M\ncatch_workers_output = yes\nlog_errors = On\ndisplay_errors = On\nlog_level = notice", 
            "title": "Php-fpm"
        }, 
        {
            "location": "/php/#logs-everything-to-file-htaccess-format", 
            "text": "php_flag display_startup_errors on\nphp_flag display_errors off\nphp_flag html_errors off\nphp_flag log_errors on\n#php_flag ignore_repeated_errors off\n#php_flag ignore_repeated_source off\n#php_flag report_memleaks on\n#php_flag track_errors on\n#php_value docref_root 0\n#php_value docref_ext 0\nphp_value error_reporting -1\n#php_value log_errors_max_len 0#\nphp_value error_log /var/local/www/web1/phperrors.log  This logs sintax erros too, not logged by default in apache error log\nor not logged if you're passing options inside the php file itself using\nini_set.", 
            "title": "Logs everything to file (htaccess format)"
        }, 
        {
            "location": "/poormanvpn/", 
            "text": "Sshuttle\n\n\nTransparent proxy server that works as a poor man's VPN. Forwards over ssh. Doesn't require admin. Works with Linux and MacOS. Supports DNS tunneling.\n\n\nSetup\n\n\ngit clone https://github.com/apenwarr/sshuttle\n\n\n\nUse\n\n\n./sshuttle -r you@somewhere.tld 0/0\n./sshuttle -r you@somewhere.tld 192.168.33.0/24\n\n\n\nAdd \n--dns\n to use remote dns", 
            "title": "Poormanvpn"
        }, 
        {
            "location": "/poormanvpn/#sshuttle", 
            "text": "Transparent proxy server that works as a poor man's VPN. Forwards over ssh. Doesn't require admin. Works with Linux and MacOS. Supports DNS tunneling.", 
            "title": "Sshuttle"
        }, 
        {
            "location": "/poormanvpn/#setup", 
            "text": "git clone https://github.com/apenwarr/sshuttle", 
            "title": "Setup"
        }, 
        {
            "location": "/poormanvpn/#use", 
            "text": "./sshuttle -r you@somewhere.tld 0/0\n./sshuttle -r you@somewhere.tld 192.168.33.0/24  Add  --dns  to use remote dns", 
            "title": "Use"
        }, 
        {
            "location": "/postfix/", 
            "text": "Postfix mail server\n\n\nDebug commands\n\n\nWho is using the server to send messages?\n\n\nfind /var/spool/postfix/deferred -type f | xargs -n1 basename | xargs postcat -q | grep 'Authenticated sender'\nfind /var/spool/postfix/active -type f | xargs -n1 basename | xargs postcat -q | grep 'Authenticated sender'", 
            "title": "Postfix"
        }, 
        {
            "location": "/postfix/#postfix-mail-server", 
            "text": "", 
            "title": "Postfix mail server"
        }, 
        {
            "location": "/postfix/#debug-commands", 
            "text": "Who is using the server to send messages?  find /var/spool/postfix/deferred -type f | xargs -n1 basename | xargs postcat -q | grep 'Authenticated sender'\nfind /var/spool/postfix/active -type f | xargs -n1 basename | xargs postcat -q | grep 'Authenticated sender'", 
            "title": "Debug commands"
        }, 
        {
            "location": "/puppet/", 
            "text": "Puppet resources\n\n\nChecking code\n\n\nPuppet syntax checks\n\n\npuppet parser validate \nfile.pp\n\n\n\n\nHiera files in YAML format\n\n\nruby -e \"require 'yaml'; YAML.parse(File.open('yourhierafile'))\"\n\n\n\nCookbooks\n\n\nValidating\n\n\nvalidate_re($ensure, '(present|absent)', \"ensure must be 'present' or 'absent', checked value is '$ensure'\")\n\n\n\nMaking a private class\n\n\nif $caller_module_name != $module_name {\n  warning(\"${name} is not part of the public API of the ${module_name} module and should not be directly included in the manifest.\")\n}\n\n\n\nMake an Exec run one time in N days\n\n\nexec { 'update composer':\n  command =\n \"wget ${source} -O ${destination}\",\n          onlyif  =\n \"test `find '${destination}' -mtime +${max_age}`\",\n          path    =\n [ '/bin/', '/sbin/' , '/usr/bin/', '/usr/sbin/'  ],\n          require =\n File[$destination],\n}\n\n\n\nValidate ensure parameter\n\n\nvalidate_re($ensure, [ '^installed$', '^present$', '^absent$', '^latest$' ])\n\n\n\nDebug Facter \n Hiera\n\n\npuppet facts find FACTNAME\n\n\n\nMake the resource myresource configurable through hiera hash\n\n\nclass myclass (\n  $values = {},\n){\n\n  validate_hash($values)\n\n  # ensure merging of hiera levels\n  $hiera_values = hiera_hash('myclass::values', {})     # this merge multiple levels\n  $real_values = $hiera_values ? {\n    undef   =\n $values,                                 # default values are the class parameter ones\n    default =\n $hiera_values,                           # if exists, hiera values has precedence\n  }\n\n  if $real_values {\n    create_resources('myresource', $real_values)\n  }\n\n\n\nCheck for OS family and version\n\n\ncase $::osfamily {\n  'Debian': {\n    # do common debian/ubuntu things\n    case $::operatingsystem {\n      'Debian': {\n        if versioncmp($::lsbmajdistrelease, '8') \n 0 {\n          # do specific things for Debian \n= 8\n        }\n      }\n      'Ubuntu': {\n        # do specific things for Ubuntu\n      }\n      default: {\n        fail(\"Unsupported osfamily: ${::osfamily} operatingsystem: ${::operatingsystem}, module ${module_name} only support operatingsystem Debian and Ubuntu on osfamily Debian\")\n      }\n    }\n  }\n  'RedHat': {\n    # do specific things for RedHat\n  }\n  default: {\n    fail(\"Unsupported osfamily: ${::osfamily} operatingsystem: ${::operatingsystem}, module ${module_name} only support osfamily Debian and RedHat\")\n  }", 
            "title": "Puppet"
        }, 
        {
            "location": "/puppet/#puppet-resources", 
            "text": "", 
            "title": "Puppet resources"
        }, 
        {
            "location": "/puppet/#checking-code", 
            "text": "Puppet syntax checks  puppet parser validate  file.pp   Hiera files in YAML format  ruby -e \"require 'yaml'; YAML.parse(File.open('yourhierafile'))\"", 
            "title": "Checking code"
        }, 
        {
            "location": "/puppet/#cookbooks", 
            "text": "", 
            "title": "Cookbooks"
        }, 
        {
            "location": "/puppet/#validating", 
            "text": "validate_re($ensure, '(present|absent)', \"ensure must be 'present' or 'absent', checked value is '$ensure'\")", 
            "title": "Validating"
        }, 
        {
            "location": "/puppet/#making-a-private-class", 
            "text": "if $caller_module_name != $module_name {\n  warning(\"${name} is not part of the public API of the ${module_name} module and should not be directly included in the manifest.\")\n}", 
            "title": "Making a private class"
        }, 
        {
            "location": "/puppet/#make-an-exec-run-one-time-in-n-days", 
            "text": "exec { 'update composer':\n  command =  \"wget ${source} -O ${destination}\",\n          onlyif  =  \"test `find '${destination}' -mtime +${max_age}`\",\n          path    =  [ '/bin/', '/sbin/' , '/usr/bin/', '/usr/sbin/'  ],\n          require =  File[$destination],\n}", 
            "title": "Make an Exec run one time in N days"
        }, 
        {
            "location": "/puppet/#validate-ensure-parameter", 
            "text": "validate_re($ensure, [ '^installed$', '^present$', '^absent$', '^latest$' ])", 
            "title": "Validate ensure parameter"
        }, 
        {
            "location": "/puppet/#debug-facter-hiera", 
            "text": "puppet facts find FACTNAME", 
            "title": "Debug Facter &amp;&amp; Hiera"
        }, 
        {
            "location": "/puppet/#make-the-resource-myresource-configurable-through-hiera-hash", 
            "text": "class myclass (\n  $values = {},\n){\n\n  validate_hash($values)\n\n  # ensure merging of hiera levels\n  $hiera_values = hiera_hash('myclass::values', {})     # this merge multiple levels\n  $real_values = $hiera_values ? {\n    undef   =  $values,                                 # default values are the class parameter ones\n    default =  $hiera_values,                           # if exists, hiera values has precedence\n  }\n\n  if $real_values {\n    create_resources('myresource', $real_values)\n  }", 
            "title": "Make the resource myresource configurable through hiera hash"
        }, 
        {
            "location": "/puppet/#check-for-os-family-and-version", 
            "text": "case $::osfamily {\n  'Debian': {\n    # do common debian/ubuntu things\n    case $::operatingsystem {\n      'Debian': {\n        if versioncmp($::lsbmajdistrelease, '8')   0 {\n          # do specific things for Debian  = 8\n        }\n      }\n      'Ubuntu': {\n        # do specific things for Ubuntu\n      }\n      default: {\n        fail(\"Unsupported osfamily: ${::osfamily} operatingsystem: ${::operatingsystem}, module ${module_name} only support operatingsystem Debian and Ubuntu on osfamily Debian\")\n      }\n    }\n  }\n  'RedHat': {\n    # do specific things for RedHat\n  }\n  default: {\n    fail(\"Unsupported osfamily: ${::osfamily} operatingsystem: ${::operatingsystem}, module ${module_name} only support osfamily Debian and RedHat\")\n  }", 
            "title": "Check for OS family and version"
        }, 
        {
            "location": "/raid/", 
            "text": "Linux Software Raid (MdAdm)\n\n\nRecover a standalone disk from RAID1 failure\n\n\n# Connect disk, suppose it get recognized as /dev/sdb\n\n# Array it's probably assembled automatically as `/dev/mdNNN`, but _inactive_\nroot@motoko:~# cat /proc/mdstat\nPersonalities : [linear] [multipath] [raid0] [raid1] [raid6] [raid5] [raid4] [raid10]\nmd125 : inactive sdb6[0](S)\n  953321472 blocks super 1.2\n\nmd126 : inactive sdb1[0](S)\n  19529728 blocks super 1.2\n\nmd127 : inactive sdb5[1](S)\n  3905528 blocks super 1.2\n\nroot@motoko:~# mdadm --stop /dev/md125\n\nroot@motoko:~# mdadm --assemble --force /dev/md0 /dev/sdb6`\nmdadm: /dev/md0 has been started with 1 drive (out of 2).\n\nroot@motoko:~# cat /proc/mdstat\nPersonalities : [linear] [multipath] [raid0] [raid1] [raid6] [raid5] [raid4] [raid10]\nmd0 : active raid1 sdb6[0]\n      953321336 blocks super 1.2 [2/1] [U_]\n\nunused devices: \nnone\n\n\nroot@motoko:~# mkdir /mnt/recovery\nroot@motoko:~# mount /dev/md0 /mnt/recovery\n\n# if fails try also\nroot@motoko:~# fsck -p /dev/md0", 
            "title": "Raid"
        }, 
        {
            "location": "/raid/#linux-software-raid-mdadm", 
            "text": "", 
            "title": "Linux Software Raid (MdAdm)"
        }, 
        {
            "location": "/raid/#recover-a-standalone-disk-from-raid1-failure", 
            "text": "# Connect disk, suppose it get recognized as /dev/sdb\n\n# Array it's probably assembled automatically as `/dev/mdNNN`, but _inactive_\nroot@motoko:~# cat /proc/mdstat\nPersonalities : [linear] [multipath] [raid0] [raid1] [raid6] [raid5] [raid4] [raid10]\nmd125 : inactive sdb6[0](S)\n  953321472 blocks super 1.2\n\nmd126 : inactive sdb1[0](S)\n  19529728 blocks super 1.2\n\nmd127 : inactive sdb5[1](S)\n  3905528 blocks super 1.2\n\nroot@motoko:~# mdadm --stop /dev/md125\n\nroot@motoko:~# mdadm --assemble --force /dev/md0 /dev/sdb6`\nmdadm: /dev/md0 has been started with 1 drive (out of 2).\n\nroot@motoko:~# cat /proc/mdstat\nPersonalities : [linear] [multipath] [raid0] [raid1] [raid6] [raid5] [raid4] [raid10]\nmd0 : active raid1 sdb6[0]\n      953321336 blocks super 1.2 [2/1] [U_]\n\nunused devices:  none \n\nroot@motoko:~# mkdir /mnt/recovery\nroot@motoko:~# mount /dev/md0 /mnt/recovery\n\n# if fails try also\nroot@motoko:~# fsck -p /dev/md0", 
            "title": "Recover a standalone disk from RAID1 failure"
        }, 
        {
            "location": "/services/", 
            "text": "Services\n\n\nWhat services are started on boot?\n\n\nservice --status-all\n\n\n\n\n\n[ + ] \u2013 Services with this sign are currently running.\n\n\n[ \u2013 ] \u2013 Services with this sign are not currently running..\n\n\n[ ? ] \u2013 Services that do not have a status switch.\n\n\n\n\nRemove a service\n\n\nupdate-rc.d -f apache2 remove\n\n\n\nAdd a service\n\n\nupdate-rc.d apache2 defaults\n\n\n\nSystemd\n\n\nFiles path\n\n\n/usr/lib/systemd\n  /user\n  /system\n\n~/.config/systemd\n  /user\n\n\n\nUseful commands\n\n\nsystemctl (enable|try-reload-or-restart|list-units|kill|status|show|cat) \nNAME", 
            "title": "Services"
        }, 
        {
            "location": "/services/#services", 
            "text": "What services are started on boot?  service --status-all   [ + ] \u2013 Services with this sign are currently running.  [ \u2013 ] \u2013 Services with this sign are not currently running..  [ ? ] \u2013 Services that do not have a status switch.   Remove a service  update-rc.d -f apache2 remove  Add a service  update-rc.d apache2 defaults", 
            "title": "Services"
        }, 
        {
            "location": "/services/#systemd", 
            "text": "Files path  /usr/lib/systemd\n  /user\n  /system\n\n~/.config/systemd\n  /user  Useful commands  systemctl (enable|try-reload-or-restart|list-units|kill|status|show|cat)  NAME", 
            "title": "Systemd"
        }, 
        {
            "location": "/systemd/", 
            "text": "SystemD\n\n\nServices has a new name... happy! They are now \nunits\n\n\npaths\n\n\n/lib/systemd/system\n\n\n\nsystem logs\n\n\nShow current logs\n\n\njournalctl -n         # show onetime\njournalctl -f         # tail logs\n\n\n\nShow today logs from two units:\n\n\njournalctl -u nginx.service -u php-fpm.service --since today\n\n\n\nShow kernel logs\n\n\njournalctl -k                # last boot\njournalctl -k -b -5          # five boots ago\n\n\n\nShow by field (\nman systemd.journal-fields\n)\n\n\njournalctl _UID=33 --since today\n\n\n\nShow only error messages, from boot\n\n\njournalctl -p err -b\n\n\n\nOther interesting options\n\n\n--no-pager        # don't use more\n--no-full         # truncate at last column\n-a                # show all, even non printable chars\n\n\n\nOverride a systemd profile\n\n\nTo override some attributes inside example.service, create\n\n\n/etc/systemd/system/example.service.d/mycustom.conf\n\n\n\nand write there you customizations", 
            "title": "Systemd"
        }, 
        {
            "location": "/systemd/#systemd", 
            "text": "Services has a new name... happy! They are now  units", 
            "title": "SystemD"
        }, 
        {
            "location": "/systemd/#paths", 
            "text": "/lib/systemd/system", 
            "title": "paths"
        }, 
        {
            "location": "/systemd/#system-logs", 
            "text": "Show current logs  journalctl -n         # show onetime\njournalctl -f         # tail logs  Show today logs from two units:  journalctl -u nginx.service -u php-fpm.service --since today  Show kernel logs  journalctl -k                # last boot\njournalctl -k -b -5          # five boots ago  Show by field ( man systemd.journal-fields )  journalctl _UID=33 --since today  Show only error messages, from boot  journalctl -p err -b  Other interesting options  --no-pager        # don't use more\n--no-full         # truncate at last column\n-a                # show all, even non printable chars", 
            "title": "system logs"
        }, 
        {
            "location": "/systemd/#override-a-systemd-profile", 
            "text": "To override some attributes inside example.service, create  /etc/systemd/system/example.service.d/mycustom.conf  and write there you customizations", 
            "title": "Override a systemd profile"
        }, 
        {
            "location": "/zfs/", 
            "text": "ZFS\n\n\nPool\n\n\nzpool create -f tank sda4\n\nzfs pool status\n\n\n\nDataset and volumes\n\n\nManaging volumes\n\n\nzfs create $pool/$volume\nzfs destroy $pool/$volume\nzfs status\n\n\n\nVolume options\n\n\nzfs create -o dedup=on -o compression=on -o mountpoint=/mnt/var tank/myvar\n\n\n\nsame as\n\n\nzfs create tank/myvar\nzfs set mountopoint=/mnt/var tank/myvar\nzfs set dedup=on tank/myvar\nzfs set compression=on tank/myvar\n\n\n\nverify options\n\n\nzfs get all tank/myvar", 
            "title": "Zfs"
        }, 
        {
            "location": "/zfs/#zfs", 
            "text": "", 
            "title": "ZFS"
        }, 
        {
            "location": "/zfs/#pool", 
            "text": "zpool create -f tank sda4\n\nzfs pool status", 
            "title": "Pool"
        }, 
        {
            "location": "/zfs/#dataset-and-volumes", 
            "text": "Managing volumes  zfs create $pool/$volume\nzfs destroy $pool/$volume\nzfs status", 
            "title": "Dataset and volumes"
        }, 
        {
            "location": "/zfs/#volume-options", 
            "text": "zfs create -o dedup=on -o compression=on -o mountpoint=/mnt/var tank/myvar  same as  zfs create tank/myvar\nzfs set mountopoint=/mnt/var tank/myvar\nzfs set dedup=on tank/myvar\nzfs set compression=on tank/myvar  verify options  zfs get all tank/myvar", 
            "title": "Volume options"
        }
    ]
}